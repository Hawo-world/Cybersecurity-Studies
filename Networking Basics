## TCP/IP (transmission, control, protocol) & (internet protocol)

# - think of it as a cake with many layers. ex: application: http port 80 & smtp, transport: tcp & udp, internet, network)
# • after the application layer gets the data from whatever program, it talks to the transport layer using something called a "port". 
# • Once TCP gets the data, it chops it up into small packets so they can individually take the quickest route over the internet to get to their destination.
# • to make sure the receiver correctly puts the package back together, it includes a "heather" on each package like instructions 
# • packets are then pushed onto thr "internet layer" | used the IP (internet protocol) to attach both the origin and destination of the IP addresses. 
# • then sent to the final network layer | handles things like Mac addressing.
# - streamlines things further | faster to break them apart before sending to avoid traffic 

## DNS (domain name system)
# • computers use numbers to talk to and identify eachother (IP addresses). humans use letters.
# • DNS was created as a way for humans to talk to computers. Resolves names to numbers/ resolves domain names to IP addresses.
# • instead of typing "yahoo.com" into web browser, you could type in the IP addresses. (will pull up the same thing) | works like a phone book 
# steps that DNS takes:(Resolver).
#    • 1) if the DNS cannot find the IP addresses, it will send to next level "Resolver" (ISP-internet service protocol) • 2) if Resolver cannot find IP addresses, •
#    • 3a) it will send to next level "Root Server" (top or the root of the DNS hierarchy) - 13 sets of these room servers strategically placed around the world, operated by 12 different organizations, each set has their own unique I.P. address aswell.
#    • 3b) the root server wont know the IP addresses but will know where to send the Resolver: TLD server (top level domain) for a ".com" domain.
#    • 4) the Resolver will then ask the TLD. |TLD stores address information for top level domains: .com, .net, .org etc.
#    • 5) if TLD doesnt know, it will send to the ANS (authoritative name server), final server/ authority. | responsible for knowing everything about the domain |

## Portsit specifically determines which program or service on a computer or server that is going to be used (web page, FTP, email) 
# what is a port? | A port is NOT a physical connection. it is a LOGICAL CONNECTION  that's used by programs and services to exchange information. | 
# • Ports will have a unique number that identified them: that number ranges from 0-65535 | common port numbers: 80 & 443 = web pages (HTTP, HTTPS), 21 = FTP (file transfer protocol), 25 = email (SMTP)
# • after port is allways associated with an IP address. they work together to exchange information on a network. ex layout: IP address -> 66.94.43.13 + :21 <- port # 
# • if you want to connect to a server over the internet: an IP address determines the geographical location of that server, then a PORT  number determines which service or program on that server it wants to use  (web page. FTP, email, etc.) 
# • Very common port that everybody uses almost daily: port 80. associated with HTTP (Hypertext Transfer Protocol), which is web pages. 


### Firewalls
# system that is designed to prevent unauthorized access from entering a private network. block unwanted, permits wanted. | creates a safety barrier between a private network and the public internet.
# firewalls use an access control list/ "rules" to verify if whatever trying to access it is allowed (leave or enter). rules can be based on. IP addresses, domain names. protocols, programs, ports & key words. 
## types: Host-based firewall- software firewall that is installed on a computer; protects that computer only. , zone alarm, anti-virus programs, network based firewall (combo of hardware & software) & protects the entire network , 
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#

#
#
#
#
#
#
